rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    match /voice-samples/{userId}/{voiceName}/{fileName} {
      allow write: if 
        // Base authentication checks
        request.auth != null 
        && request.auth.uid == userId 
        && request.auth.token.email_verified

        // Premium plan verification
        && firestore.get(/databases/(default)/documents/users/$(userId)).data.plan == 'premium'

        // Active Stripe subscription check
        && firestore.get(/databases/(default)/documents/users/$(userId)).data.stripeSubscriptionStatus == 'active'

        // Storage quota enforcement (100MB)
        && (
          (firestore.get(/databases/(default)/documents/users/$(userId)).data.storageUsed != null 
          ? firestore.get(/databases/(default)/documents/users/$(userId)).data.storageUsed 
          : 0
          ) + request.resource.size < 100 * 1024 * 1024
        )

        // File type validation
        && request.resource.contentType.matches('audio/(wav|mp3|ogg|webm)')

        // File size limit (10MB per file)
        && request.resource.size < 20 * 1024 * 1024;

        allow read: if 
        // Authentication checks
        request.auth != null 
        && request.auth.uid == userId 
        && request.auth.token.email_verified
        
        // Active premium subscription
        && firestore.exists(/databases/(default)/documents/users/$(userId))
        && firestore.get(/databases/(default)/documents/users/$(userId)).data.plan == 'premium'
        && firestore.get(/databases/(default)/documents/users/$(userId)).data.stripeSubscriptionStatus == 'active'
    }

    match /tts/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null 
                         && request.auth.uid == userId 
                         && request.auth.token.email_verified;
    }

    // Rules for story content - admin only
    match /stories/{storyId}/{allPaths=**} {
      // Restrict both read and write to admin-only
      allow read, write: if request.auth != null 
                         && request.auth.token.admin == true;
    }
  }
}